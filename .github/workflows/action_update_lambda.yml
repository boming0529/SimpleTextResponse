name: Build and Deploy Lambda

on:
  push:
    tags:
      - 'v*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          TAG_NAME="${GITHUB_REF##*/}"

          echo "AWS_REGION=${{ vars.AWS_REGION }}" >> $GITHUB_ENV
          echo "LAMBDA_FUNCTION_NAME=${{ secrets.LAMBDA_FUNCTION_NAME }}" >> $GITHUB_ENV
          echo "DOCKER_IMAGE={{ vars.DOCKER_IMAGE }}" >> $GITHUB_ENV
          echo "ZIP_FILE_NAME={{ vars.ZIP_FILE_NAME }}" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Build Lambda ZIP Package
        run: |
          echo "Using Docker (emulated arm64) to install Python dependencies..."

          docker run --rm -v "$(pwd):/var/task" \
          --entrypoint "/bin/sh" \
          $DOCKER_IMAGE \
          -c "pip install -r /var/task/requirements.txt -t /var/task"

          echo "Zipping package..."
          zip -r9 $ZIP_FILE_NAME main.py database.py psycopg2*

      - name: Update Lambda to use new image
        run: |
          echo "Deploying new image to Lambda: $LAMBDA_FUNCTION_NAME"
          aws lambda update-function-code \
            --function-name $LAMBDA_FUNCTION_NAME \
            --zip-file fileb://$ZIP_FILE_NAME \
            --region $AWS_REGION

          echo "Cleaning up local files..."
          rm $ZIP_FILE_NAME
          rm -rf psycopg2*